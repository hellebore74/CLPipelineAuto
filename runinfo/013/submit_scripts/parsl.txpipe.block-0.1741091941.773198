#!/bin/bash

#SBATCH --job-name=parsl.txpipe.block-0.1741091941.773198
#SBATCH --output=/sps/lsst/users/elles/CLPipeline_parsl/venv_parsl/CLPipelineAuto/runinfo/013/submit_scripts/parsl.txpipe.block-0.1741091941.773198.stdout
#SBATCH --error=/sps/lsst/users/elles/CLPipeline_parsl/venv_parsl/CLPipelineAuto/runinfo/013/submit_scripts/parsl.txpipe.block-0.1741091941.773198.stderr
#SBATCH --nodes=1
#SBATCH --time=10
#SBATCH --ntasks-per-node=1
#SBATCH --time=05:00:00
#SBATCH --ntasks=30
#SBATCH --cpus-per-task=1
#SBATCH --mem=128000

#SBATCH --partition=hpc


module load python; source activate parsl


export JOBNAME="parsl.txpipe.block-0.1741091941.773198"

set -e
export CORES=$(getconf _NPROCESSORS_ONLN)
[[ "1" == "1" ]] && echo "Found cores : $CORES"
WORKERCOUNT=1
FAILONANY=0
PIDS=""

CMD() {
process_worker_pool.py   -a 127.0.0.1,134.158.240.20 -p 0 -c 1.0 -m None --poll 10 --task_port=54585 --result_port=54392 --cert_dir None --logdir=/sps/lsst/users/elles/CLPipeline_parsl/venv_parsl/CLPipelineAuto/runinfo/013/txpipe --block_id=0 --hb_period=30  --hb_threshold=120 --drain_period=None --cpu-affinity none  --mpi-launcher=mpiexec --available-accelerators 
}
for COUNT in $(seq 1 1 $WORKERCOUNT); do
    [[ "1" == "1" ]] && echo "Launching worker: $COUNT"
    CMD $COUNT &
    PIDS="$PIDS $!"
done

ALLFAILED=1
ANYFAILED=0
for PID in $PIDS ; do
    wait $PID
    if [ "$?" != "0" ]; then
        ANYFAILED=1
    else
        ALLFAILED=0
    fi
done

[[ "1" == "1" ]] && echo "All workers done"
if [ "$FAILONANY" == "1" ]; then
    exit $ANYFAILED
else
    exit $ALLFAILED
fi

